name: CI/CD
on:
  push:
    branches: ["main"]
  workflow_dispatch:
jobs:
  # CI:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Source code
  #       uses: actions/checkout@v4.2.2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
        
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./src
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         file: ./src/Dockerfile
  #         tags: |
  #           romanharen/fake-shop:latest
  #           romanharen/fake-shop:${{ github.run_number }}

  CD:
    runs-on: ubuntu-latest
    #needs: [CI]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Set up Oracle Cloud CLI (oci-cli)
        run: |
          # Install the OCI CLI
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install oci-cli
  
      - name: Install oci-cli
        uses: bytesbay/oci-cli-action@v1.0.2
        with:
          user: "${{ secrets.OCI_USER_OCID }}"
          fingerprint: "${{ secrets.OCI_FINGERPRINT }}"
          tenancy: "${{ secrets.OCI_TENANCY_OCID }}"
          region: "${{ secrets.OCI_REGION }}"
          api_key: |
            ${{ secrets.OCI_API_KEY }}
          verbose: true
  
      - name: Fetch Kubernetes config from Oracle Cloud
        run: |
          # Get the kubeconfig for the OKE cluster
          oci ce cluster create-kubeconfig --cluster-id ${{ secrets.OCI_CLUSTER_ID }} --file $HOME/.kube/config --region ${{ secrets.OCI_REGION }} --token-version 2.0.0  --kube-endpoint PUBLIC_ENDPOINT
  
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.24.0'
  
      - name: Verify Kubernetes Cluster Connection
        run: |
          # Test connection to the Kubernetes cluster
          kubectl get nodes